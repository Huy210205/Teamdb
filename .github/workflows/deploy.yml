name: Deploy to Production

on:
  workflow_run:
    workflows: ["Java CI with Maven + Docker"]
    types:
      - completed
    branches: [main, master]

env:
  DOCKER_IMAGE: homie-hotel
  DOCKER_TAG: latest
  CONTAINER_NAME: homiehotel-app
  PORT: 9596

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: 🔐 Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: 🚀 Deploy to server
      run: |
        echo "🚀 Deploying HomieHotel application..."
        echo "✅ CI/CD Pipeline completed successfully"
        echo "📦 Docker image: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}"
        
        # SSH into server and deploy
        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          echo "🐳 Pulling latest image from Docker Hub..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          
          echo "🛑 Stopping existing container..."
          docker stop ${{ env.CONTAINER_NAME }} || true
          docker rm ${{ env.CONTAINER_NAME }} || true
          
          echo "🚀 Starting new container..."
          docker run -d \
            --name ${{ env.CONTAINER_NAME }} \
            -p ${{ env.PORT }}:${{ env.PORT }} \
            --restart unless-stopped \
            -e TZ=Asia/Ho_Chi_Minh \
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          
          echo "✅ Container started successfully!"
          echo "📊 Container status:"
          docker ps | grep ${{ env.CONTAINER_NAME }}
          
          echo "📝 Recent logs:"
          docker logs --tail 20 ${{ env.CONTAINER_NAME }}
        EOF
        
    - name: 📧 Send notification
      run: |
        echo "📧 Deployment completed successfully!"
        echo "🔗 Repository: https://github.com/Huy210205/Teamdb.git"
        echo "🐳 Docker Hub: https://hub.docker.com/r/${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}"
        echo "📦 Image: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}"
        echo "🌐 Application available at: http://${{ secrets.SERVER_HOST }}:${{ env.PORT }}"
        echo "✅ No manual intervention required - fully automated deployment!" 