name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  DOCKER_IMAGE: huy210205/homiehotel
  DOCKER_TAG: latest

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Build with Maven
      run: mvn clean package -DskipTests
    
    - name: Test WAR file
      run: |
        if [ -f "target/HomieHotel-v1.0.war" ]; then
          echo "‚úÖ WAR file built successfully"
          ls -la target/HomieHotel-v1.0.war
        else
          echo "‚ùå WAR file not found"
          exit 1
        fi

  docker-build-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_IMAGE }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  notify:
    needs: docker-build-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - name: Notify success
      run: |
        echo "üéâ CI/CD Pipeline completed successfully!"
        echo "üì¶ Docker image: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}"
        echo "üîó Pull command: docker pull ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}"
        echo "üöÄ Run command: docker run -d --name homiehotel-app -p 9596:9596 -e TZ=Asia/Ho_Chi_Minh -e SPRING_DATASOURCE_URL='jdbc:mysql://host.docker.internal:3306/hotel?serverTimezone=Asia/Ho_Chi_Minh&allowPublicKeyRetrieval=true&useSSL=false' -e SPRING_DATASOURCE_USERNAME=root -e SPRING_DATASOURCE_PASSWORD='' -e SPRING_JPA_HIBERNATE_DDL_AUTO=update --restart unless-stopped --add-host host.docker.internal:host-gateway ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}" 